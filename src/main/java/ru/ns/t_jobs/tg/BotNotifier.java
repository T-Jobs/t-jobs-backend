package ru.ns.t_jobs.tg;

import lombok.RequiredArgsConstructor;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.springframework.stereotype.Component;
import ru.ns.t_jobs.app.candidate.entity.Candidate;
import ru.ns.t_jobs.app.candidate.entity.Resume;
import ru.ns.t_jobs.app.interview.entity.Interview;
import ru.ns.t_jobs.app.track.entity.Track;
import ru.ns.t_jobs.app.vacancy.entity.Vacancy;

import java.io.IOException;
import java.time.format.DateTimeFormatter;

@Component
@RequiredArgsConstructor
public class BotNotifier {
    private static final String TOKEN = "7569412835:AAHASFrKoOqw2TykMsRq-J67RpAl0-cRev4";
    private static final String URL_FORMAT = "https://api.telegram.org/bot" + TOKEN + "/sendMessage";

    private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss");

    private static void sendMessage(long chatId, String message) {
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            String jsonPayload = String.format("{\"chat_id\":\"%s\", \"text\":\"%s\", \"sparse_mode\": \"Markdown\"}", chatId, message);

            HttpPost postRequest = new HttpPost(URL_FORMAT);
            StringEntity entity = new StringEntity(jsonPayload, "UTF-8");
            postRequest.setEntity(entity);
            postRequest.setHeader("Content-Type", "application/json; charset=UTF-8");

            httpClient.execute(postRequest).close();
        } catch (IOException ignored) {
        }
    }

    public static void notifyCanceledInterview(Interview interview) {
        String message = """
                üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! üö®\\n\\n
                –°–µ–∫—Ü–∏—è '%s' –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ '%s' –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\uD83E\uDDD1\u200D\uD83D\uDCBC
                –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è! \uD83D\uDE0A""".formatted(
                interview.getInterviewType().getName(),
                interview.getTrack().getVacancy().getName()
        );
        sendMessage(interview.getTrack().getCandidate().getChatId(), message);
    }

    public static void notifySucceedInterview(Interview interview) {
        String message = """
                ‚úî –ò–Ω—Ç–µ—Ä–≤—å—é —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–æ! ‚úî\\n\\n
                –°–µ–∫—Ü–∏—è '%s' –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ '%s' –±—ã–ª–∞ –ø—Ä–æ–π–¥–µ–Ω–∞.
                –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä–∞:
                > %s""".formatted(
                interview.getInterviewType().getName(),
                interview.getTrack().getVacancy().getName(),
                interview.getFeedback()
        );
        sendMessage(interview.getTrack().getCandidate().getChatId(), message);
    }

    public static void notifyFailedInterview(Interview interview) {
        String message = """
                ‚ùå –ò–Ω—Ç–µ—Ä–≤—å—é –∑–∞–≤–∞–ª–µ–Ω–æ ‚ùå\\n\\n
                –°–µ–∫—Ü–∏—è '%s' –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ '%s' –±—ã–ª–∞ –∑–∞–≤–∞–ª–µ–Ω–∞. üò¢
                –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä–∞:
                > %s""".formatted(
                interview.getInterviewType().getName(),
                interview.getTrack().getVacancy().getName(),
                interview.getFeedback()
        );
        sendMessage(interview.getTrack().getCandidate().getChatId(), message);
    }

    public static void notifyDateInterview(Interview interview) {
        String message = """
                üìù –ù–∞–∑–Ω–∞—á–µ–Ω–æ –∏–Ω—Ç–µ—Ä–≤—å—é üìù\\n\\n
                –°–µ–∫—Ü–∏—è '%s' –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ '%s' –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ %s.
                """.formatted(
                interview.getInterviewType().getName(),
                interview.getTrack().getVacancy().getName(),
                interview.getDatePicked().format(DATE_TIME_FORMATTER)
        );
        sendMessage(interview.getTrack().getCandidate().getChatId(), message);
    }

    public static void notifyDateDeclined(Interview interview) {
        String message = """
                ‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ '%s' –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ '%s' –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ.
                """.formatted(
                interview.getInterviewType().getName(),
                interview.getTrack().getVacancy().getName()
        );
        sendMessage(interview.getTrack().getCandidate().getChatId(), message);
    }

    public static void notifyApprovedApplication(Track track) {
        String message = """
                üéü –ó–∞—è–≤–∫–∞ –Ω–∞ –æ—Ç–±–æ—Ä –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é '%s' –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.
                """.formatted(
                track.getVacancy().getName()
        );
        sendMessage(track.getCandidate().getChatId(), message);
    }

    public static void notifyFinishedTrack(Track track) {
        String message = """
                üèÅ –û—Ç–±–æ—Ä –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é '%s' –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω.
                """.formatted(
                track.getVacancy().getName()
        );
        sendMessage(track.getCandidate().getChatId(), message);
    }

    public static void notifyStartedTrack(Track track) {
        String message = """
                üë©‚Äçüíª –í–∞—Å –ø–æ–∑–≤–∞–ª–∏ –Ω–∞ –æ—Ç–±–æ—Ä –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é '%s'.
                """.formatted(
                track.getVacancy().getName()
        );
        sendMessage(track.getCandidate().getChatId(), message);
    }

    public static void notifyAboutMeFormAccepted(long chatId) {
        String message = "üîÉ –ì—É–≥–ª —Ñ–æ—Ä–º–∞ \"–û —Å–µ–±–µ\" —É—Å–ø–µ—à–Ω–∞ –ø—Ä–∏–Ω—è—Ç–∞.";
        sendMessage(chatId, message);
    }

    public static void notifyResumeAccepted(Resume resume) {
        String message = """
                üîÉ –†–µ–∑—é–º–µ '%s –±—ã–ª–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.
                """.formatted(
                resume.getName()
        );
        sendMessage(resume.getCandidate().getChatId(), message);
    }

    public static void notifySuccessfullyApplied(long chatId, Vacancy vacancy) {
        String message = """
                üíº –ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é '%s' –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–∞ –ø–æ–¥–∞–Ω–∞.
                """.formatted(
                vacancy.getName()
        );
        sendMessage(chatId, message);
    }
}
